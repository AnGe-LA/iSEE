% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\docType{methods}
\name{output-generics}
\alias{output-generics}
\alias{.renderOutput}
\alias{.defineOutput}
\title{Generics for Panel outputs}
\description{
An overview of the generics for defining the panel outputs, along with recommendations on their implementation.
}
\section{Defining the output element}{

In \code{.defineOutput(x, ...)}, the following arguments are required:
\itemize{
\item \code{x}, an instance of a Panel subclass.
\item \code{...}, further arguments that are not currently used.
}

Methods for this generic are expected to return an output element for inclusion into the \pkg{iSEE} interface, such as the output of \code{\link{plotOutput}}.
Multiple elements can be provided via a \code{\link{tagList}}.

The IDs of the output elements are expected to be prefixed with \code{PANEL} (the panel name) and an underscore.
One of the output elements may simply have the ID set to \code{PANEL} alone;
this is usually the case for simple panels with one primary output like a \linkS4class{DotPlot}.
}

\section{Defining the rendered output}{

In \code{.renderOutput(x, se, ..., output, pObjects, rObjects)}, the following arguments are required:
\itemize{
\item \code{x}, an instance of a \linkS4class{Panel} class.
\item \code{se}, a \linkS4class{SummarizedExperiment} object containing the current dataset.
\item \code{...}, further arguments that may be used by specific methods.
\item \code{output}, the Shiny output object from the server function.
\item \code{pObjects}, an environment containing global parameters generated in the \code{\link{iSEE}} app.
\item \code{rObjects}, a reactive list of values generated in the \code{\link{iSEE}} app.
}

It is expected to attach a reactive expression to \code{output} to render the output elements created by \code{.defineOutput}.
The return value of this generic is not used; only the side-effect of the output set-up is relevant.

Within the rendering expression for each output, developers should call \code{force(rObjects[[PANEL]])} where \code{PANEL} is the panel name.
This ensures that the output is rerendered upon changes to the appropriate reactive variable, which is itself modified by \code{\link{.renderPanel}} and related functions in \code{\link{.createObservers}}.
}

\section{Additional rendering obligations}{

The rendering expression defined in \code{\link{.renderOutput}} is also expected to:
\itemize{
\item Fill \code{pObjects$contents[[PANEL]]} with some content related to the displayed output.
This will be used in other generics like \code{\link{.multiSelectionCommands}} and \code{\link{.singleSelectionValue}} to determine the identity of the selected point(s).
\item Fill \code{pObjects$commands[[PANEL]]} with a character vector of commands required to produce the displayed output.
This will minimally include the commands required to generate \code{pObjects$contents[[PANEL]]};
for plotting panels, the vector should also include code to create the plot.
}
}

\author{
Aaron Lun
}
