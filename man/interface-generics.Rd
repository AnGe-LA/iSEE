% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\docType{methods}
\name{interface-generics}
\alias{interface-generics}
\alias{.defineInterface}
\alias{.hideInterface}
\title{Generics for the panel interface}
\description{
An overview of the generics for defining the user interface (UI) for each panel as well as some recommendations on their implementation.
}
\section{Defining the parameter interface}{

In \code{.defineInterface(x, se, select_info)}, the required arguments are:
\itemize{
\item \code{x}, an instance of a \linkS4class{Panel} class.
\item \code{se}, a \linkS4class{SummarizedExperiment} object containing the current dataset.
This can be assumed to have been produced by running \code{\link{.refineParameters}(x, se)}.
\item \code{select_info}, a list of two lists, \code{single} and \code{multiple},
each of which contains the character vectors \code{row} and \code{column}.
This specifies the panels available for transmitting single/multiple selections on the rows/columns,
see \code{?\link{.multiSelectionDimension}} and \code{?\link{.singleSelectionDimension}} for more details.
}

Methods for this generic are expected to return a list of \code{\link{collapseBox}} elements.
Each parameter box can contain arbitrary numbers of additional UI elements, 
each of which is expected to modify one slot of \code{x} upon user interaction.

The ID of each interface element should follow the form of \code{PANEL_SLOT} where \code{PANEL} is the panel name and \code{SLOT} is the name of the slot modified by the interface element, e.g., \code{"redDimPlot1_RedDimType"}.
Each interface element should have an equivalent observer in \code{\link{.createObservers}} unless they are hidden by \code{\link{.hideInterface}} (see below).

It is the developer's responsibility to call \code{\link{callNextMethod}} to obtain interface elements for parent classes.
Refer to the contract for each \linkS4class{Panel} class to determine what is already provided by each parent.
}

\section{Hiding interface elements}{

In \code{.hideInterface(x, field)}, the required arguments are:
\itemize{
\item \code{x}, an instance of a \linkS4class{Panel} class.
\item \code{field}, string containing the name of a slot of \code{x}.
}

Methods for this generic are expected to return a logical scalar indicating whether the interface element corresponding to \code{field} should be hidden from the user.
This is useful for hiding UI elements that cannot be changed or have no effect.

It is the developer's responsibility to call \code{\link{callNextMethod}} to hide the same interface elements as parent classes.
This is not strictly required if one wishes to expose previously hidden elements.
Refer to the contract for each \linkS4class{Panel} class to determine what is already provided by each parent.
}

\author{
Aaron Lun
}
