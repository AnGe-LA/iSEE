% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jitterPoints.R
\name{jitterPoints}
\alias{jitterPoints}
\title{Jitter points for categorical variables}
\usage{
jitterPoints(X, Y, grouping = NULL, ...)
}
\arguments{
\item{X}{A factor corresponding to a categorical variable.}

\item{Y}{A numeric vector of the same length as \code{X} for violin plots, or a factor of the same length as \code{X} for square plots.}

\item{grouping}{A character vector or factor as the same length as \code{X}, specifying how elements should be grouped.}

\item{...}{Further arguments to be passed to \code{\link{offsetX}}.}
}
\value{
If \code{Y} is a numeric vector, a numeric vector is returned containing the jittered x-axis coordinates for all points.

Otherwise, a list is returned with numeric vectors \code{X} and \code{Y}, containing jittered coordinates on the x- and y-axes respectively for all points.
}
\description{
Adds quasi-random jitter on the x-axis for violin plots when the x-axis variable is categorical.
Alternatively, adds random jitter within a rectangular area for square plots when both x- and y-axis variables are categorical.
}
\details{
If \code{Y} is numeric, this function calls \code{\link{offsetX}} to obtain quasi-random jittered x-axis values.
This reflects the area occupied by a violin plot, though some tuning of arguments in \code{...} may be required to get an exact match.

If both \code{Y} and \code{X} are factors, points are uniformly jittered on both the x- and y-axes. 
The jitter area is a square with area proportional to the frequency of the paired levels in \code{X} and \code{Y}.
If either factor only has one level, the jitter area becomes a rectangle that can be interpreted as a bar plot.

If \code{grouping} is specified (e.g., corresponding to faceting variables), jitter is computed within each level of \code{grouping}.
This is useful for obtaining appropriate jittering when points are visualized by group, e.g., during faceting.
}
\examples{
X <- factor(sample(LETTERS[1:4], 100, replace=TRUE))
Y <- rnorm(100)
(out1 <- jitterPoints(X=X, Y=Y))

Y2 <- factor(sample(letters[1:3], 100, replace=TRUE)
(out2 <- jitterPoints(X=X, Y=Y))

grouped <- sample(5, 100, replace=TRUE)
(out3 <- jitterPoints(X=X, Y=Y, grouping=grouped))
}
\author{
Aaron Lun
}
