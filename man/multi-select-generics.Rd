% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{multi-select-generics}
\alias{multi-select-generics}
\alias{.multiSelectionDimension}
\alias{.multiSelectionRestricted}
\alias{.multiSelectionActive}
\alias{.multiSelectionCommands}
\title{Generics for controlling multiple selections}
\description{
A panel can create a multiple selection on either the rows or columns 
and transmit this selection to another panel to affect its set of displayed points.
For example, users can brush on a \linkS4class{DotPlot}s to select a set of points,
and then the panel can transmit the identities of those points to another panel for highlighting.

This suite of generics controls the behavior of these multiple selections.
In all of the code chunks shown below, \code{x} is assumed to be an instance of the \linkS4class{Panel} class.
}
\section{Specifying the dimension}{

\code{.multiSelectionDimension(x)} should return a string specifying whether the selection contains rows (\code{"row"}), columns (\code{"column"}) or if the Panel in \code{x} does not perform multiple selections at all (\code{"none"}).
The output should be constant for all instances of \code{x} and is used to govern the interface choices for the selection parameters.
}

\section{Specifying the active selection}{

\code{.multiSelectionActive(x)} should return some structure containing all parameters required to identify all points in the active multiple selection of \code{x}.
If \code{.multiSelectionActive(x)} returns \code{NULL}, \code{x} is assumed to have no active multiple selection.

The active selection is considered to be the one that can be directly changed by the user, as compared to saved selections that are not modifiable (other than being deleted on a first-in-last-out basis).
This generic is primarily used to bundle up selection parameters to be stored in the \code{MultiSelectHistory} slot when the user saves the current active selection.

As an example, in \linkS4class{DotPlot}s, the method for this generic would return the contents of the \code{BrushData} slot.
}

\section{Evaluating the selection}{

\code{.multiSelectionCommands(x, index)} is expected to return a character vector of commands to generate a character vector of row or column names in the desired multiple selection of \code{x}.
If \code{index=NA}, the desired selection is the currently active one;
otherwise, for an integer \code{index}, it refers to the corresponding saved selection in the \code{MultiSelectHistory}.

The commands will be evaluated in an environment containing:
\itemize{
\item \code{select}, a variable of the same type as returned by \code{\link{.multiSelectionActive}(x)}.
This will contain the active selection if \code{index=NA} and one of the saved selections otherwise.
For example, for \linkS4class{DotPlot}s, \code{select} will be either a Shiny brush or a lasso structure.
\item \code{contents}, some arbitrary content saved by the rendering expression in \code{\link{.renderOutput}(x)}.
This content should have some sensible interaction with the panel's multiple selection mechanism.
For example, a data.frame of coordinates is stored by \linkS4class{DotPlot}s to identify the points selected by a brush/lasso.
}

The commands are expected to produce a character vector named \code{selected} in the evaluation environment.
All other variables generated by the commands should be prefixed with \code{.} to avoid name clashes.
}

\section{Destroying selections}{

\code{.multiSelectionClear(x)} should return \code{x} after removing the active selection, i.e., so that nothing is selected.
This is used internally to remove multiple selections that do not make sense after the panel paramaters have changed.
For example, a selection made on a PCA plot in \linkS4class{RedDimPlot}s would not make sense after switching to t-SNE coordinates, so the application will automatically erase those selections to avoid misleading conclusions.
}

\section{Responding to selections}{

\code{.multiSelectionRestricted(x)} should return a logical scalar indicating whether \code{x}'s displayed contents will be restricted to the selection transmitted from \emph{another panel}.
This is used to determine whether child panels of \code{x} need to be re-rendered when \code{x}'s transmitter changes its multiple selection.
Note that this generic pertains to how \code{x} responds to a transmitted selection, not how \code{x} itself transmits selections.

As an example, in \linkS4class{DotPlot}s, the method for this generic would return \code{TRUE} if \code{SelectEffect="Restrict"}.
Otherwise, it would be \code{FALSE} as the transmitted selection is only used for aesthetics are not for changing the identity of the displayed points.
}

\author{
Aaron Lun
}
