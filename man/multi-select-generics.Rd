% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{multi-select-generics}
\alias{multi-select-generics}
\alias{.multiSelectionDimension}
\alias{.multiSelectionRestricted}
\alias{.multiSelectionActive}
\alias{.multiSelectionCommands}
\title{Generics for controlling multiple selections}
\description{
A panel can create a multiple selection on either the rows or columns 
and transmit this selection to another panel to affect its set of displayed points.
For example, users can brush on a \linkS4class{DotPlot}s to select a set of points,
and then the panel can transmit the identities of those points to another panel for highlighting.
This suite of generics controls the behavior of these multiple selections.
}
\section{Specifying the nature of the selection}{

In all of the code chunks shown below, \code{x} is assumed to be an instance of the \linkS4class{Panel} class.
\itemize{
\item \code{.multiSelectionDimension(x)} should return a string specifying whether the selection contains rows (\code{"row"}), columns (\code{"column"}) or if the Panel in \code{x} does not perform multiple selections at all (\code{"none"}).
The output should be constant for all instances of \code{x}.
\item \code{.multiSelectionActive(x)} should return some structure containing all the parameters required to identify all points in the active multiple selection of \code{x}.
For example, for \linkS4class{DotPlot}s, this would be the contents of the \code{BrushData} slot.
If \code{NULL}, \code{x} is assumed to have no active multiple selection.
This is primarily used to save multiple selections into the \code{MultiSelectHistory} slot.
\item \code{.multiSelectionRestricted(x)} should return a logical scalar indicating whether \code{x}'s output will be restricted to the selection transmitted from another panel.
This is used to determine whether child panels of \code{x} need to be re-rendered when \code{x}'s transmitter changes its multiple selection.
}
}

\section{Performing the selection}{

\code{.multiSelectionCommands(x, index)} is expected to return a character vector of commands to generate a character vector of row or column names in the desired multiple selection.
If \code{index=NA}, the desired selection is the currently active one;
otherwise, for an integer \code{index}, it refers to the corresponding saved selection in the \code{MultiSelectHistory}.

The commands will be evaluated in an environment containing:
\itemize{
\item \code{select}, a variable of the same type as returned by \code{\link{.multiSelectionActive}(x)}.
This will contain the active selection if \code{index=NA} and one of the saved selections otherwise.
For example, for \linkS4class{DotPlot}s, \code{select} will be either a Shiny brush or a lasso structure.
\item \code{contents}, some arbitrary content saved by the rendering expression in \code{\link{.renderOutput}(x)}.
This content should have some sensible interaction with the panel's multiple selection mechanism.
For example, a data.frame of coordinates is stored by \linkS4class{DotPlot}s to identify the points selected by a brush/lasso.
}

The command is expected to produce a character vector named \code{selected} in the evaluation environment.
All internal variables should be prefixed with \code{.} to avoid name clashes.
}

\author{
Aaron Lun
}
